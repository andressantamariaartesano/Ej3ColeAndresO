/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.Banco;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import modelo.Cuenta;

/**
 *
 * @author dam
 */
public class CajeroTransacciones extends javax.swing.JPanel {
    DefaultComboBoxModel modeloComboCuentas;
    Banco banco;

    /**
     * Creates new form CajeroIngresar
     */
    public CajeroTransacciones(Banco banco) {
        this.banco = banco;
        inicializarComboCuentas();
        initComponents();
    }
    
    /**
     * Inicializa el combo box de cuentas
     */
    private void inicializarComboCuentas() {
        Vector listaCuentas = new Vector(banco.getCuentas());
        modeloComboCuentas = new DefaultComboBoxModel(listaCuentas);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        btnRetirar = new javax.swing.JButton();
        btnIngresar = new javax.swing.JButton();
        cmbCuentas = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(850, 480));

        jLabel1.setText("Cuenta");

        jLabel2.setText("Saldo");

        txtSaldo.setEditable(false);

        jLabel3.setText("Monto");

        btnRetirar.setText("Retirar");
        btnRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarActionPerformed(evt);
            }
        });

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        cmbCuentas.setModel(modeloComboCuentas);
        cmbCuentas.setSelectedIndex(-1);
        cmbCuentas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCuentasItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(btnRetirar)
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaldo)
                    .addComponent(cmbCuentas, 0, 200, Short.MAX_VALUE))
                .addGap(86, 86, 86)
                .addComponent(btnIngresar)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(151, 151, 151)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRetirar)
                    .addComponent(btnIngresar))
                .addContainerGap(139, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        ingresarSaldo();
    }//GEN-LAST:event_btnIngresarActionPerformed
    
    /**
     * Ingresa el saldo si el monto es válido.
     */
    private void ingresarSaldo() {
        Cuenta cuenta = (Cuenta)cmbCuentas.getSelectedItem();
        String monto = txtMonto.getText();
        
       
        if (esDoublePositivo(monto)) {
            cuenta.ingresarSaldo(Double.parseDouble(monto));
            ventanaInformacion("Dinero ingresado.", "Transacción");
            actualizarIngreso();
        }
    }
    
    /**
     * Actualiza el saldo de la cuenta según el ingreso.
     */
    private void actualizarIngreso() {
        double saldoAnterior = Double.parseDouble(txtSaldo.getText());
        double monto = Double.parseDouble(txtMonto.getText());
        double saldoActual = saldoAnterior + monto;
        
        txtSaldo.setText(String.valueOf(saldoActual));
    }
    
    private void btnRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarActionPerformed
        retirarSaldo();
        
    }//GEN-LAST:event_btnRetirarActionPerformed

    /**
     * Retira el saldo en el caso de que la cuenta disponga de ese saldo.
     */
    private void retirarSaldo() {
        Cuenta cuenta = (Cuenta)cmbCuentas.getSelectedItem();
        String monto = txtMonto.getText();
        
        if (!esDoublePositivo(monto)) {
            
        } else if (!cuenta.puedeRetirar(Double.parseDouble(monto))){
            ventanaAdvertencia("No se puede retirar dinero, saldo insuficiente.", "Error");
        } else {
            cuenta.retirarSaldo(Double.parseDouble(monto));
            ventanaInformacion("Dinero retirado.", "Transacción");
            actualizarRetiro();
        }
    }

    /**
     * Actualiza el saldo de la cuenta según el retiro.
     */
    private void actualizarRetiro() {
        double saldoAnterior = Double.parseDouble(txtSaldo.getText());
        double monto = Double.parseDouble(txtMonto.getText());
        double saldoActual = saldoAnterior - monto;
        
        txtSaldo.setText(String.valueOf(saldoActual));
    }
    
    
    /**
     * Comprueba si un valor es double y positivo.
     * @param valor Valor
     * @return False si no es positivo o no es un número, true si es double y positivo.
     */
    private boolean esDoublePositivo(String valor) {
        boolean valido;
        try {
            double monto = Double.parseDouble(valor);
            if (monto > 0){
                valido = true;
            } else {
                valido = false;
                ventanaAdvertencia("El monto tiene que ser positivo.", "Error");
            }
        } catch (NumberFormatException ex) {
            valido = false;
            ventanaAdvertencia("El monto tiene que ser un número.", "Error");
        }
        
        return valido;
    }
    
    private void cmbCuentasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCuentasItemStateChanged
        cargarSaldo();
    }//GEN-LAST:event_cmbCuentasItemStateChanged

    
    /**
     * Carga el saldo en el cuadro de texto habilitado para eso
     */
    private void cargarSaldo() {
        Cuenta cuentaSeleccionada = (Cuenta) cmbCuentas.getSelectedItem();
        
        txtSaldo.setText(String.valueOf(cuentaSeleccionada.getSaldo()));
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnRetirar;
    private javax.swing.JComboBox<String> cmbCuentas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtSaldo;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Muestra una ventana de advertencia con un determinado titulo y mensaje.
     *
     * @param mensaje Mensaje de la ventana.
     * @param titulo Titulo de la ventana.
     */
    public void ventanaAdvertencia(String mensaje, String titulo) {
        String rutaImagen = "src/images/advertencia.png";
        ImageIcon icono = new ImageIcon(rutaImagen);
        JOptionPane.showMessageDialog(this, mensaje, titulo, JOptionPane.WARNING_MESSAGE, icono);
    }
    
    /**
     * Muestra una ventana de informacion con un determinado titulo y mensaje.
     *
     * @param mensaje Mensaje de la ventana.
     * @param titulo Titulo de la ventana.
     */
    public void ventanaInformacion(String mensaje, String titulo) {
        String rutaImagen = "src/images/informacion.png";
        ImageIcon icono = new ImageIcon(rutaImagen);
        JOptionPane.showMessageDialog(this, mensaje, titulo, JOptionPane.WARNING_MESSAGE, icono);
    }
}
